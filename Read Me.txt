Coruscation uses a customized fork of Sparkle available at http://github.com/kolpanic/Sparkle/.

Because Coruscation includes Sparkle as a sub-project reference, and builds the framework as a dependent target, you have to set Xcode's preferences to use a shared build products directory, e.g., ~/Projects/build/. (Xcode's default is to put build products in the project directory.)

If you don't want to change Xcode's global preferences, you can change it for just the Coruscation and Sparkle projects. Get info on each project in Xcode, and on the General tab, change the build location to a shared directory. Note that if you choose this method, you'll have to manage conflicts in the .pbxproj when merging updates from the main repository (this should be rare, since hg is good at merging).

Clone that project to a directory next to coruscation/, and build Coruscation.xcodeproj

Here's a summary of the changes.

• ConfigFramework.xcconfig: Add at the end (to support building GC app via Xcode subproject reference).
GCC_ENABLE_OBJC_GC = supported

• SUAppcastItem.m: After line 132 (NSString *newVersion = [enclosure objectForKey:@"sparkle:version"];), add to support apps that use older versions of Sparkle with different appcast keys.
if (newVersion == nil)
	newVersion = [dict objectForKey:@"version"];

• SUBasicUpdateDriver.m, At the end of the method -appcast:failedToLoadWithError:, so the delegate is notified of errors.
[self didNotFindUpdate];

• SUUpdater.m: Comment out the if block at line 74 that checks for securely-delivered updates. Apps built with older Sparkle will likely fail this test, the alerts are annoying. Also comment out lines 342 & 343 that limit profile sending to weekly.
74:
//if (![[[self feedURL] scheme] isEqualToString:@"https"] && ![host publicDSAKey])
//	NSRunAlertPanel(@"Insecure update error!", @"For security reasons, you need to distribute your appcast over SSL or sign your updates. See Sparkle's documentation for more information.", @"OK", nil, nil);

342:
//	const NSTimeInterval oneWeek = 60 * 60 * 24 * 7;
//	sendingSystemProfile &= (-[lastSubmitDate timeIntervalSinceNow] >= oneWeek);


SUUpdater.h: make the reference to the delegate weak so the CheckUpdateAppOperation objects can be garbage collected
21:
	IBOutlet id __weak delegate;
